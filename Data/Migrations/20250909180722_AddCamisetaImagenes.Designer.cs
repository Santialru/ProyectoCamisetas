// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoCamisetas.Data;

#nullable disable

namespace ProyectoCamisetas.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250909180722_AddCamisetaImagenes")]
    partial class AddCamisetaImagenes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProyectoCamisetas.Models.Camiseta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("codigo_barras");

                    b.Property<string>("ColorPrincipal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("color_principal");

                    b.Property<string>("ColorSecundario")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("color_secundario");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Equipo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("equipo");

                    b.Property<bool>("EsEdicionLimitada")
                        .HasColumnType("boolean")
                        .HasColumnName("es_edicion_limitada");

                    b.Property<bool>("EsPersonalizada")
                        .HasColumnType("boolean")
                        .HasColumnName("es_personalizada");

                    b.Property<DateOnly?>("FechaLanzamiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_lanzamiento");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("text")
                        .HasColumnName("imagen_url");

                    b.Property<string>("Jugador")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("jugador");

                    b.Property<string>("Liga")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("liga");

                    b.Property<int?>("Manga")
                        .HasColumnType("integer")
                        .HasColumnName("manga");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("marca");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("material");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("nombre");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("Patrocinador")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("patrocinador");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric")
                        .HasColumnName("precio");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("sku");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("stock");

                    b.Property<int?>("Talla")
                        .HasColumnType("integer")
                        .HasColumnName("talla");

                    b.Property<string>("Temporada")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("temporada");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo");

                    b.Property<string>("TipoCuello")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("tipo_cuello");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_camisetas");

                    b.HasIndex("Equipo")
                        .HasDatabaseName("ix_camisetas_equipo");

                    b.HasIndex("Liga")
                        .HasDatabaseName("ix_camisetas_liga");

                    b.HasIndex("SKU")
                        .IsUnique()
                        .HasDatabaseName("ix_camisetas_sku");

                    b.HasIndex("Temporada")
                        .HasDatabaseName("ix_camisetas_temporada");

                    b.ToTable("camisetas", (string)null);
                });

            modelBuilder.Entity("ProyectoCamisetas.Models.CamisetaImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CamisetaId")
                        .HasColumnType("integer")
                        .HasColumnName("camiseta_id");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnName("orden");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_camiseta_imagenes");

                    b.HasIndex("CamisetaId")
                        .HasDatabaseName("ix_camiseta_imagenes_camiseta_id");

                    b.HasIndex("CamisetaId", "Orden")
                        .IsUnique()
                        .HasDatabaseName("ix_camiseta_imagenes_camiseta_id_orden");

                    b.ToTable("camiseta_imagenes", (string)null);
                });

            modelBuilder.Entity("ProyectoCamisetas.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTimeOffset?>("ActualizadoEn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("actualizado_en");

                    b.Property<DateTimeOffset?>("BloqueadoHasta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("bloqueado_hasta");

                    b.Property<DateTimeOffset>("CreadoEn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creado_en");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("integer")
                        .HasColumnName("intentos_fallidos");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("text")
                        .HasColumnName("password_salt");

                    b.Property<short>("Rol")
                        .HasColumnType("smallint")
                        .HasColumnName("rol");

                    b.Property<DateTimeOffset?>("UltimoAcceso")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultimo_acceso");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("Usuario")
                        .IsUnique()
                        .HasDatabaseName("ix_users_usuario");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ProyectoCamisetas.Models.CamisetaImagen", b =>
                {
                    b.HasOne("ProyectoCamisetas.Models.Camiseta", "Camiseta")
                        .WithMany("Imagenes")
                        .HasForeignKey("CamisetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_camiseta_imagenes_camisetas_camiseta_id");

                    b.Navigation("Camiseta");
                });

            modelBuilder.Entity("ProyectoCamisetas.Models.Camiseta", b =>
                {
                    b.Navigation("Imagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
